{"version":3,"sources":["observer.js"],"names":[],"mappings":"AAAC,WAAU,MAAV,EAAkB,OAAlB,EAA2B;AACxB,SAAO,OAAP,KAAmB,QAAnB,IAA+B,OAAO,MAAP,KAAkB,WAAjD,GAA+D,SAA/D,GACA,OAAO,MAAP,KAAkB,UAAlB,IAAgC,OAAO,GAAvC,GAA6C,OAAO,OAAP,CAA7C,GACC,SAFD;AAGH,CAJA,EAIC,IAJD,EAIQ,YAAY;AAAE;;;;;;AAKvB,MAAI,WAAW,eAAe,EAA9B;;;;;;;;;AAUA,WAAS,GAAT,CAAa,GAAb,EAAkB,GAAlB,EAAuB,GAAvB,EAA4B,UAA5B,EAA2C;AACvC,WAAO,cAAP,CAAsB,GAAtB,EAA2B,GAA3B,EAAgC;AAC5B,aAAO,GADqB;AAE5B,kBAAY,CAAC,CAAC,UAFc;AAG5B,gBAAU,IAHkB;AAI5B,oBAAc;AAJc,KAAhC;AAMH;;;;;;;AAOD,WAAS,QAAT,CAAkB,GAAlB,EAAuB;AACnB,WAAO,QAAQ,IAAR,IAAgB,OAAO,GAAP,KAAe,QAAtC;AACH;;;;;;AAMD,MAAI,WAAW,OAAO,SAAP,CAAiB,QAAhC;AACA,MAAI,gBAAgB,iBAApB;AACA,WAAS,aAAT,CAAuB,GAAvB,EAA4B;AACxB,WAAO,SAAS,IAAT,CAAc,GAAd,MAAuB,aAA9B;AACH;;;;;AAMD,MAAI,iBAAiB,OAAO,SAAP,CAAiB,cAAtC;AACA,WAAS,MAAT,CAAgB,GAAhB,EAAqB,GAArB,EAA0B;AACtB,WAAO,eAAe,IAAf,CAAoB,GAApB,EAAyB,GAAzB,CAAP;AACH;;;;;AAKD,MAAI,aAAa,QAAjB;;;;;;AAUA,MAAI,OAAO,UAAU,GAAV,EAAe;AACtB,YAAQ,KAAR,CAAe,aAAa,GAAb,GAAmB,GAAlC;AACH,GAFD;;;;;AAOA,WAAS,MAAT,CAAiB,GAAjB,EAAsB,IAAtB,EAA4B;AAC1B,QAAI,IAAI,MAAR,EAAgB;AACd,UAAI,QAAQ,IAAI,OAAJ,CAAY,IAAZ,CAAZ;AACA,UAAI,QAAQ,CAAC,CAAb,EAAgB;AACd,eAAO,IAAI,MAAJ,CAAW,KAAX,EAAkB,CAAlB,CAAP;AACD;AACF;AACF;;;;;AAMD,MAAI,SAAS,WAAb;AACA,WAAS,SAAT,CAAoB,IAApB,EAA0B;AACtB,QAAI,OAAO,IAAP,CAAY,IAAZ,CAAJ,EAAuB;AACnB;AACH,KAFD,MAEO;AACH,UAAI,WAAW,KAAK,KAAL,CAAW,GAAX,CAAf;AACA,aAAO,UAAU,GAAV,EAAe;AAClB,aAAK,IAAI,IAAI,CAAb,EAAgB,IAAI,SAAS,MAA7B,EAAqC,GAArC,EAA0C;AACtC,cAAI,CAAC,GAAL,EAAU;AAAE;AAAQ;AACpB,gBAAM,IAAI,SAAS,CAAT,CAAJ,CAAN;AACH;AACD,eAAO,GAAP;AACH,OAND;AAOH;AACJ;;AAGD,MAAI,IAAJ;;;;;;;AAOI,SAAQ,YAAY;AACtB,aAAS,GAAT,GAAgB;AACN,WAAK,GAAL,GAAW,OAAO,MAAP,CAAc,IAAd,CAAX;AACH;AACD,QAAI,SAAJ,CAAc,GAAd,GAAoB,SAAS,GAAT,CAAc,GAAd,EAAmB;AACvC,aAAO,KAAK,GAAL,CAAS,GAAT,MAAkB,SAAzB;AACH,KAFG;AAGJ,QAAI,SAAJ,CAAc,GAAd,GAAoB,SAAS,GAAT,CAAc,GAAd,EAAmB;AACnC,WAAK,GAAL,CAAS,GAAT,IAAgB,CAAhB;AACH,KAFD;AAGA,QAAI,SAAJ,CAAc,KAAd,GAAsB,SAAS,KAAT,GAAkB;AACpC,WAAK,GAAL,GAAW,OAAO,MAAP,CAAc,IAAd,CAAX;AACH,KAFD;;AAIF,WAAO,GAAP;AACD,GAfW,EAAR;;;;AAoBJ,MAAI,MAAM,CAAV;;;;;;AAMA,MAAI,MAAM,SAAS,GAAT,GAAgB;AACxB,SAAK,EAAL,GAAU,KAAV;AACA,SAAK,IAAL,GAAY,EAAZ;AACD,GAHD;;AAKA,MAAI,SAAJ,CAAc,MAAd,GAAuB,SAAS,MAAT,CAAiB,GAAjB,EAAsB;AAC3C,SAAK,IAAL,CAAU,IAAV,CAAe,GAAf;AACD,GAFD;;AAIA,MAAI,SAAJ,CAAc,SAAd,GAA0B,SAAS,SAAT,CAAoB,GAApB,EAAyB;AACjD,WAAO,KAAK,IAAZ,EAAkB,GAAlB;AACD,GAFD;;AAIA,MAAI,SAAJ,CAAc,MAAd,GAAuB,SAAS,MAAT,GAAmB;AACxC,QAAI,IAAI,MAAR,EAAgB;AACd,UAAI,MAAJ,CAAW,MAAX,CAAkB,IAAlB;AACD;AACF,GAJD;;;AAOA,MAAI,SAAJ,CAAc,MAAd,GAAuB,SAAS,MAAT,GAAmB;;AAExC,QAAI,OAAO,KAAK,IAAL,CAAU,KAAV,EAAX;AACA,SAAK,IAAI,IAAI,CAAR,EAAW,IAAI,KAAK,MAAzB,EAAiC,IAAI,CAArC,EAAwC,GAAxC,EAA6C;AAC3C,WAAK,CAAL,EAAQ,MAAR;AACD;AACF,GAND;;;;;AAWA,MAAI,MAAJ,GAAa,IAAb;AACA,MAAI,cAAc,EAAlB;;AAEA,WAAS,UAAT,CAAqB,OAArB,EAA8B;AAC5B,QAAI,IAAI,MAAR,EAAgB;AAAE,kBAAY,IAAZ,CAAiB,IAAI,MAArB;AAA+B;AACjD,QAAI,MAAJ,GAAa,OAAb;AACD;;AAED,WAAS,SAAT,GAAsB;AACpB,QAAI,MAAJ,GAAa,YAAY,GAAZ,EAAb;AACD;;AAED,MAAI,aAAa,MAAM,SAAvB;AACA,MAAI,eAAe,OAAO,MAAP,CAAc,UAAd,CAAnB,CAA6C,CAC3C,MAD2C,EAE3C,KAF2C,EAG3C,OAH2C,EAI3C,SAJ2C,EAK3C,QAL2C,EAM3C,MAN2C,EAO3C,SAP2C,EAS5C,OAT4C,CASpC,UAAU,MAAV,EAAkB;;AAEzB,QAAI,WAAW,WAAW,MAAX,CAAf;AACA,QAAI,YAAJ,EAAkB,MAAlB,EAA0B,SAAS,OAAT,GAAoB;AAC5C,UAAI,cAAc,SAAlB;;;;AAIA,UAAI,IAAI,UAAU,MAAlB;AACA,UAAI,OAAO,IAAI,KAAJ,CAAU,CAAV,CAAX;AACA,aAAO,GAAP,EAAY;AACV,aAAK,CAAL,IAAU,YAAY,CAAZ,CAAV;AACD;AACD,UAAI,SAAS,SAAS,KAAT,CAAe,IAAf,EAAqB,IAArB,CAAb;AACA,UAAI,KAAK,KAAK,MAAd;AACA,UAAI,QAAJ;AACA,cAAQ,MAAR;AACE,aAAK,MAAL;AACE,qBAAW,IAAX;AACA;AACF,aAAK,SAAL;AACE,qBAAW,IAAX;AACA;AACF,aAAK,QAAL;AACE,qBAAW,KAAK,KAAL,CAAW,CAAX,CAAX;AACA;AATJ;AAWA,UAAI,QAAJ,EAAc;AAAE,WAAG,YAAH,CAAgB,QAAhB;AAA4B;;AAE5C,SAAG,GAAH,CAAO,MAAP;AACA,aAAO,MAAP;AACD,KA5BD;AA6BD,GAzC4C;;;;AA6C7C,MAAI,YAAY,OAAO,mBAAP,CAA2B,YAA3B,CAAhB;;;;;;;;AAQA,MAAI,gBAAgB;AAClB,mBAAe,IADG;AAElB,oBAAgB;AAFE,GAApB;;;;;;;;AAWA,MAAI,WAAW,SAAS,QAAT,CAAmB,KAAnB,EAA0B;AACvC,SAAK,KAAL,GAAa,KAAb;AACA,SAAK,GAAL,GAAW,IAAI,GAAJ,EAAX;AACA,SAAK,OAAL,GAAe,CAAf;AACA,QAAI,KAAJ,EAAW,QAAX,EAAqB,IAArB;AACA,QAAI,MAAM,OAAN,CAAc,KAAd,CAAJ,EAA0B;AACxB,UAAI,UAAU,WACV,YADU,GAEV,WAFJ;AAGA,cAAQ,KAAR,EAAe,YAAf,EAA6B,SAA7B;AACA,WAAK,YAAL,CAAkB,KAAlB;AACD,KAND,MAMO;AACL,WAAK,IAAL,CAAU,KAAV;AACD;AACF,GAdD;;;;;;;AAqBA,WAAS,SAAT,CAAmB,IAAnB,GAA0B,SAAS,IAAT,CAAe,GAAf,EAAoB;AAC5C,QAAI,OAAO,OAAO,IAAP,CAAY,GAAZ,CAAX;AACA,SAAK,IAAI,IAAI,CAAb,EAAgB,IAAI,KAAK,MAAzB,EAAiC,GAAjC,EAAsC;AACpC,qBAAe,GAAf,EAAoB,KAAK,CAAL,CAApB,EAA6B,IAAI,KAAK,CAAL,CAAJ,CAA7B;AACD;AACF,GALD;;;;;AAUA,WAAS,SAAT,CAAmB,YAAnB,GAAkC,SAAS,YAAT,CAAuB,KAAvB,EAA8B;AAC9D,SAAK,IAAI,IAAI,CAAR,EAAW,IAAI,MAAM,MAA1B,EAAkC,IAAI,CAAtC,EAAyC,GAAzC,EAA8C;AAC5C,cAAQ,MAAM,CAAN,CAAR;AACD;AACF,GAJD;;;;;;;;AAYA,WAAS,YAAT,CAAuB,MAAvB,EAA+B,GAA/B,EAAoC;;AAElC,WAAO,SAAP,GAAmB,GAAnB;;AAED;;;;;;;;AAQD,WAAS,WAAT,CAAsB,MAAtB,EAA8B,GAA9B,EAAmC,IAAnC,EAAyC;AACvC,SAAK,IAAI,IAAI,CAAR,EAAW,IAAI,KAAK,MAAzB,EAAiC,IAAI,CAArC,EAAwC,GAAxC,EAA6C;AAC3C,UAAI,MAAM,KAAK,CAAL,CAAV;AACA,UAAI,MAAJ,EAAY,GAAZ,EAAiB,IAAI,GAAJ,CAAjB;AACD;AACF;;;;;;;AAOD,WAAS,OAAT,CAAkB,KAAlB,EAAyB;AACvB,QAAI,CAAC,SAAS,KAAT,CAAL,EAAsB;AACpB;AACD;AACD,QAAI,EAAJ;AACA,QAAI,OAAO,KAAP,EAAc,QAAd,KAA2B,MAAM,MAAN,YAAwB,QAAvD,EAAiE;;AAE/D,WAAK,MAAM,MAAX;AACD,KAHD,MAGO,IACL,cAAc,aAAd,KACC,MAAM,OAAN,CAAc,KAAd,KAAwB,cAAc,KAAd,CADzB,KAEA,OAAO,YAAP,CAAoB,KAApB,CAFA,IAGA,CAAC,MAAM,MAJF,EAKL;AACA,WAAK,IAAI,QAAJ,CAAa,KAAb,CAAL;AACD;AACD,WAAO,EAAP;AACD;;;;;AAKD,WAAS,cAAT,CACE,GADF,EAEE,GAFF,EAGE,GAHF,EAIE,YAJF,EAKE;AACA,QAAI,MAAM,IAAI,GAAJ,EAAV;;AAEA,QAAI,WAAW,OAAO,wBAAP,CAAgC,GAAhC,EAAqC,GAArC,CAAf;AACA,QAAI,YAAY,SAAS,YAAT,KAA0B,KAA1C,EAAiD;AAC/C;AACD;;;AAGD,QAAI,SAAS,YAAY,SAAS,GAAlC;AACA,QAAI,SAAS,YAAY,SAAS,GAAlC;;AAEA,QAAI,UAAU,QAAQ,GAAR,CAAd;AACA,WAAO,cAAP,CAAsB,GAAtB,EAA2B,GAA3B,EAAgC;AAC9B,kBAAY,IADkB;AAE9B,oBAAc,IAFgB;AAG9B,WAAK,SAAS,cAAT,GAA2B;AAC9B,YAAI,QAAQ,SAAS,OAAO,IAAP,CAAY,GAAZ,CAAT,GAA4B,GAAxC;AACA,YAAI,IAAI,MAAR,EAAgB;AACd,cAAI,MAAJ;AACA,cAAI,OAAJ,EAAa;AACX,oBAAQ,GAAR,CAAY,MAAZ;AACD;AACD,cAAI,MAAM,OAAN,CAAc,KAAd,CAAJ,EAA0B;AACxB,wBAAY,KAAZ;AACD;AACF;AACD,eAAO,KAAP;AACD,OAf6B;AAgB9B,WAAK,SAAS,cAAT,CAAyB,MAAzB,EAAiC;AACpC,YAAI,QAAQ,SAAS,OAAO,IAAP,CAAY,GAAZ,CAAT,GAA4B,GAAxC;AACA,YAAI,WAAW,KAAf,EAAsB;AACpB;AACD;AACD,YAAI,YAAJ,EAAkB;AAChB;AACD;AACD,YAAI,MAAJ,EAAY;AACV,iBAAO,IAAP,CAAY,GAAZ,EAAiB,MAAjB;AACD,SAFD,MAEO;AACL,gBAAM,MAAN;AACD;AACD,kBAAU,QAAQ,MAAR,CAAV;AACA,YAAI,MAAJ;AACD;AA/B6B,KAAhC;AAiCD;;;;;;;;;;;;;;;;AAkBD,WAAS,WAAT,CAAsB,KAAtB,EAA6B;AAC3B,SAAK,IAAI,IAAK,KAAK,CAAd,EAAkB,IAAI,CAAtB,EAAyB,IAAI,MAAM,MAAxC,EAAgD,IAAI,CAApD,EAAuD,GAAvD,EAA4D;AAC1D,UAAI,MAAM,CAAN,CAAJ;AACA,WAAK,EAAE,MAAP,IAAiB,EAAE,MAAF,CAAS,GAAT,CAAa,MAAb,EAAjB;AACA,UAAI,MAAM,OAAN,CAAc,CAAd,CAAJ,EAAsB;AACpB,oBAAY,CAAZ;AACD;AACF;AACF;;;;;AAKD,MAAI,QAAQ,CAAZ;;;;;;;AAOA,MAAI,UAAU,SAAS,OAAT,CACZ,EADY,EAEZ,OAFY,EAGZ,EAHY,EAIZ,OAJY,EAKZ;AACA,QAAK,YAAY,KAAK,CAAtB,EAA0B,UAAU,EAAV;;AAE1B,SAAK,EAAL,GAAU,EAAV;AACA,OAAG,SAAH,CAAa,IAAb,CAAkB,IAAlB;;AAEA,SAAK,IAAL,GAAY,CAAC,CAAC,QAAQ,IAAtB;AACA,SAAK,IAAL,GAAY,CAAC,CAAC,QAAQ,IAAtB;AACA,SAAK,IAAL,GAAY,CAAC,CAAC,QAAQ,IAAtB;AACA,SAAK,IAAL,GAAY,CAAC,CAAC,QAAQ,IAAtB;AACA,SAAK,UAAL,GAAkB,QAAQ,QAAR,EAAlB;AACA,SAAK,EAAL,GAAU,EAAV;AACA,SAAK,EAAL,GAAU,EAAE,KAAZ,C;AACA,SAAK,MAAL,GAAc,IAAd;AACA,SAAK,KAAL,GAAa,KAAK,IAAlB,C;AACA,SAAK,IAAL,GAAY,EAAZ;AACA,SAAK,OAAL,GAAe,EAAf;AACA,SAAK,MAAL,GAAc,IAAI,IAAJ,EAAd;AACA,SAAK,SAAL,GAAiB,IAAI,IAAJ,EAAjB;;AAEA,QAAI,OAAO,OAAP,KAAmB,UAAvB,EAAmC;AACjC,WAAK,MAAL,GAAc,OAAd;AACD,KAFD,MAEO;AACL,WAAK,MAAL,GAAc,UAAU,OAAV,CAAd;AACA,UAAI,CAAC,KAAK,MAAV,EAAkB;AAChB,aAAK,MAAL,GAAc,YAAY,CAAE,CAA5B;AACA,gBAAQ,GAAR,CAAY,QAAZ,KAAyB,YAAzB,IAAyC,KACvC,6BAA6B,OAA7B,GAAuC,KAAvC,GACA,mDADA,GAEA,2CAHuC,EAIvC,EAJuC,CAAzC;AAMD;AACF;AACD,SAAK,KAAL,GAAa,KAAK,IAAL,GACT,SADS,GAET,KAAK,GAAL,EAFJ;AAGD,GA1CD;;;;;AA+CA,UAAQ,SAAR,CAAkB,GAAlB,GAAwB,SAAS,GAAT,GAAgB;AACtC,eAAW,IAAX;AACA,QAAI,QAAQ,KAAK,MAAL,CAAY,IAAZ,CAAiB,KAAK,EAAtB,EAA0B,KAAK,EAA/B,CAAZ;;;AAGA,QAAI,KAAK,IAAT,EAAe;AACb,eAAS,KAAT;AACD;AACD;AACA,SAAK,WAAL;AACA,WAAO,KAAP;AACD,GAXD;;;;;AAgBA,UAAQ,SAAR,CAAkB,MAAlB,GAA2B,SAAS,MAAT,CAAiB,GAAjB,EAAsB;AAC/C,QAAI,KAAK,IAAI,EAAb;AACA,QAAI,CAAC,KAAK,SAAL,CAAe,GAAf,CAAmB,EAAnB,CAAL,EAA6B;AAC3B,WAAK,SAAL,CAAe,GAAf,CAAmB,EAAnB;AACA,WAAK,OAAL,CAAa,IAAb,CAAkB,GAAlB;AACA,UAAI,CAAC,KAAK,MAAL,CAAY,GAAZ,CAAgB,EAAhB,CAAL,EAA0B;AACxB,YAAI,MAAJ,CAAW,IAAX;AACD;AACF;AACF,GATD;;;;;AAcA,UAAQ,SAAR,CAAkB,WAAlB,GAAgC,SAAS,WAAT,GAAwB;AACpD,QAAI,SAAS,IAAb;;AAEF,QAAI,IAAI,KAAK,IAAL,CAAU,MAAlB;AACA,WAAO,GAAP,EAAY;AACV,UAAI,MAAM,OAAO,IAAP,CAAY,CAAZ,CAAV;AACA,UAAI,CAAC,OAAO,SAAP,CAAiB,GAAjB,CAAqB,IAAI,EAAzB,CAAL,EAAmC;AACjC,YAAI,SAAJ,CAAc,MAAd;AACD;AACF;AACD,QAAI,MAAM,KAAK,MAAf;AACA,SAAK,MAAL,GAAc,KAAK,SAAnB;AACA,SAAK,SAAL,GAAiB,GAAjB;AACA,SAAK,SAAL,CAAe,KAAf;AACA,UAAM,KAAK,IAAX;AACA,SAAK,IAAL,GAAY,KAAK,OAAjB;AACA,SAAK,OAAL,GAAe,GAAf;AACA,SAAK,OAAL,CAAa,MAAb,GAAsB,CAAtB;AACD,GAlBD;;;;;;AAwBA,UAAQ,SAAR,CAAkB,MAAlB,GAA2B,SAAS,MAAT,GAAmB;;AAE5C,QAAI,KAAK,IAAT,EAAe;AACb,WAAK,KAAL,GAAa,IAAb;AACD,KAFD,MAEO,IAAI,KAAK,IAAT,EAAe;AACpB,WAAK,GAAL;AACD,KAFM,MAEA;;AAEL,cAAQ,GAAR,CAAY,0BAAZ;AACA,WAAK,GAAL;;AAEC;AACF,GAZH;;;;;;AAkBA,UAAQ,SAAR,CAAkB,GAAlB,GAAwB,SAAS,GAAT,GAAgB;AACtC,QAAI,KAAK,MAAT,EAAiB;AACf,UAAI,QAAQ,KAAK,GAAL,EAAZ;AACA,UACE,UAAU,KAAK,KAAf;;;;AAIA,eAAS,KAAT,CAJA,IAKA,KAAK,IANP,EAOE;;AAEA,YAAI,WAAW,KAAK,KAApB;AACA,aAAK,KAAL,GAAa,KAAb;AACA,YAAI,KAAK,IAAT,EAAe;AACb,cAAI;AACF,iBAAK,EAAL,CAAQ,IAAR,CAAa,KAAK,EAAlB,EAAsB,KAAtB,EAA6B,QAA7B;AACD,WAFD,CAEE,OAAO,CAAP,EAAU;AACV,oBAAQ,GAAR,CAAY,QAAZ,KAAyB,YAAzB,IAAyC,KACtC,wBAAyB,KAAK,UAA9B,GAA4C,IADN,EAEvC,KAAK,EAFkC,CAAzC;AAIA,kBAAM,CAAN;AACD;AACF,SAVD,MAUO;AACL,eAAK,EAAL,CAAQ,IAAR,CAAa,KAAK,EAAlB,EAAsB,KAAtB,EAA6B,QAA7B;AACD;AACF;AACF;AACF,GA7BD;;;;;;AAmCA,UAAQ,SAAR,CAAkB,QAAlB,GAA6B,SAAS,QAAT,GAAqB;AAChD,SAAK,KAAL,GAAa,KAAK,GAAL,EAAb;AACA,SAAK,KAAL,GAAa,KAAb;AACD,GAHD;;;;;AAQA,UAAQ,SAAR,CAAkB,MAAlB,GAA2B,SAAS,MAAT,GAAmB;AAC1C,QAAI,SAAS,IAAb;;AAEF,QAAI,IAAI,KAAK,IAAL,CAAU,MAAlB;AACA,WAAO,GAAP,EAAY;AACV,aAAO,IAAP,CAAY,CAAZ,EAAe,MAAf;AACD;AACF,GAPD;;;;;AAYA,UAAQ,SAAR,CAAkB,QAAlB,GAA6B,SAAS,QAAT,GAAqB;AAC9C,QAAI,SAAS,IAAb;;AAEF,QAAI,KAAK,MAAT,EAAiB;;;;;AAKf,UAAI,CAAC,KAAK,EAAL,CAAQ,iBAAT,IAA8B,CAAC,KAAK,EAAL,CAAQ,aAA3C,EAA0D;AACxD,eAAO,KAAK,EAAL,CAAQ,SAAf,EAA0B,IAA1B;AACD;AACD,UAAI,IAAI,KAAK,IAAL,CAAU,MAAlB;AACA,aAAO,GAAP,EAAY;AACV,eAAO,IAAP,CAAY,CAAZ,EAAe,SAAf,CAAyB,MAAzB;AACD;AACD,WAAK,MAAL,GAAc,KAAd;AACD;AACF,GAjBD;;;;;;;AAwBA,MAAI,cAAc,IAAI,IAAJ,EAAlB;AACA,WAAS,QAAT,CAAmB,GAAnB,EAAwB,IAAxB,EAA8B;AAC5B,QAAI,CAAJ,EAAO,IAAP;AACA,QAAI,CAAC,IAAL,EAAW;AACT,aAAO,WAAP;AACA,WAAK,KAAL;AACD;AACD,QAAI,MAAM,MAAM,OAAN,CAAc,GAAd,CAAV;AACA,QAAI,MAAM,SAAS,GAAT,CAAV;AACA,QAAI,CAAC,OAAO,GAAR,KAAgB,OAAO,YAAP,CAAoB,GAApB,CAApB,EAA8C;AAC5C,UAAI,IAAI,MAAR,EAAgB;AACd,YAAI,QAAQ,IAAI,MAAJ,CAAW,GAAX,CAAe,EAA3B;AACA,YAAI,KAAK,GAAL,CAAS,KAAT,CAAJ,EAAqB;AACnB;AACD,SAFD,MAEO;AACL,eAAK,GAAL,CAAS,KAAT;AACD;AACF;AACD,UAAI,GAAJ,EAAS;AACP,YAAI,IAAI,MAAR;AACA,eAAO,GAAP,EAAY;AAAE,mBAAS,IAAI,CAAJ,CAAT,EAAiB,IAAjB;AAAyB;AACxC,OAHD,MAGO,IAAI,GAAJ,EAAS;AACd,eAAO,OAAO,IAAP,CAAY,GAAZ,CAAP;AACA,YAAI,KAAK,MAAT;AACA,eAAO,GAAP,EAAY;AAAE,mBAAS,IAAI,KAAK,CAAL,CAAJ,CAAT,EAAuB,IAAvB;AAA+B;AAC9C;AACF;AACF;;;;;;;;;;;;;;AAcD,SAAO,EAAP,GAAY;AACR,WAAO,OADC;AAER,iBAAa,EAFL;AAGR,eAAW,YAAY;AACnB,cAAQ,GAAR,CAAY,8BAA8B,KAAK,GAA/C;AACH,KALO;AAMR,eAAW,YAAY;AACnB,cAAQ,GAAR,CAAY,SAAZ;AACH;AARO,GAAZ;;AAWA,UAAQ,EAAR;;;;;;;;;;;;;;;AAeA,MAAI,OAAJ,CAAY,EAAZ,EAAgB,YAAY;AACxB,OAAG,OAAH,CAAW,GAAG,OAAH,EAAX;AACH,GAFD,EAEG,YAAY,CAAE,CAFjB;;AAIA,MAAI,OAAJ,CAAY,EAAZ,EAAgB,YAAY;AACxB,YAAQ,GAAR,CAAY,0BAA0B,GAAG,GAAzC;AACA,YAAQ,GAAR,CAAY,yBAAZ;AACH,GAHD,EAGG,YAAY,CAAE,CAHjB;AAKC,CA3rBA,CAAD","file":"observer-compiled.js","sourcesContent":["(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n    (factory());\n}(this, (function () { 'use strict';\n\n/*  */\n\n// can we use __proto__?\nvar hasProto = '__proto__' in {};\n\n/**\n * Create a cached version of a pure function.\n */\n\n\n/**\n * Define a property.\n */\nfunction def(obj, key, val, enumerable   ) {\n    Object.defineProperty(obj, key, {\n        value: val,\n        enumerable: !!enumerable,\n        writable: true,\n        configurable: true\n    });\n}\n\n/**\n * Quick object check - this is primarily used to tell\n * Objects from primitive values when we know the value\n * is a JSON-compliant type.\n */\nfunction isObject(obj) {\n    return obj !== null && typeof obj === 'object'\n}\n\n/**\n * Strict object type check. Only returns true\n * for plain JavaScript objects.\n */\nvar toString = Object.prototype.toString;\nvar OBJECT_STRING = '[object Object]';\nfunction isPlainObject(obj) {\n    return toString.call(obj) === OBJECT_STRING\n}\n\n\n/**\n * Check whether the object has the property.\n */\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nfunction hasOwn(obj, key) {\n    return hasOwnProperty.call(obj, key)\n}\n\n/**\n * Camelize a hyphen-delmited string.\n */\nvar camelizeRE = /-(\\w)/g;\n\n\n\n/**\n * Capitalize a string.\n */\n\n\n\nvar warn = function (msg) {\n    console.error((\"[warn]: \" + msg + \" \"));\n};\n\n/**\n * Remove an item from an array\n */\nfunction remove (arr, item) {\n  if (arr.length) {\n    var index = arr.indexOf(item);\n    if (index > -1) {\n      return arr.splice(index, 1)\n    }\n  }\n}\n\n\n/**\n * Parse simple path.\n */\nvar bailRE = /[^\\w\\.\\$]/;\nfunction parsePath (path) {\n    if (bailRE.test(path)) {\n        return\n    } else {\n        var segments = path.split('.');\n        return function (obj) {\n            for (var i = 0; i < segments.length; i++) {\n                if (!obj) { return }\n                obj = obj[segments[i]];\n            }\n            return obj\n        }\n    }\n}\n\n\nvar _Set;\n/* istanbul ignore if */\n// if (typeof Set !== 'undefined' && isNative(Set)) {\n    // use native Set when available.\n    // _Set = Set\n// } else {\n    // a non-standard Set polyfill that only works with primitive keys.\n    _Set = (function () {\n  function Set () {\n            this.set = Object.create(null);\n        }\n        Set.prototype.has = function has (key) {\n        return this.set[key] !== undefined\n    };\n    Set.prototype.add = function add (key) {\n        this.set[key] = 1;\n    };\n    Set.prototype.clear = function clear () {\n        this.set = Object.create(null);\n    };\n\n  return Set;\n}());\n\n/*  */\n\n\nvar uid = 0;\n\n/**\n * A dep is an observable that can have multiple\n * directives subscribing to it.\n */\nvar Dep = function Dep () {\n  this.id = uid++;\n  this.subs = [];\n};\n\nDep.prototype.addSub = function addSub (sub) {\n  this.subs.push(sub);\n};\n\nDep.prototype.removeSub = function removeSub (sub) {\n  remove(this.subs, sub);\n};\n\nDep.prototype.depend = function depend () {\n  if (Dep.target) {\n    Dep.target.addDep(this);\n  }\n};\n\n//通知所有的sub执行update\nDep.prototype.notify = function notify () {\n  // stablize the subscriber list first\n  var subs = this.subs.slice();\n  for (var i = 0, l = subs.length; i < l; i++) {\n    subs[i].update();\n  }\n};\n\n// the current target watcher being evaluated.\n// this is globally unique because there could be only one\n// watcher being evaluated at any time.\nDep.target = null;\nvar targetStack = [];\n\nfunction pushTarget (_target) {\n  if (Dep.target) { targetStack.push(Dep.target); }\n  Dep.target = _target;\n}\n\nfunction popTarget () {\n  Dep.target = targetStack.pop();\n}\n\nvar arrayProto = Array.prototype;\nvar arrayMethods = Object.create(arrayProto);[\n  'push',\n  'pop',\n  'shift',\n  'unshift',\n  'splice',\n  'sort',\n  'reverse'\n]\n.forEach(function (method) {\n  // cache original method\n  var original = arrayProto[method];\n  def(arrayMethods, method, function mutator () {\n    var arguments$1 = arguments;\n\n    // avoid leaking arguments:\n    // http://jsperf.com/closure-with-arguments\n    var i = arguments.length;\n    var args = new Array(i);\n    while (i--) {\n      args[i] = arguments$1[i];\n    }\n    var result = original.apply(this, args);\n    var ob = this.__ob__;\n    var inserted;\n    switch (method) {\n      case 'push':\n        inserted = args;\n        break\n      case 'unshift':\n        inserted = args;\n        break\n      case 'splice':\n        inserted = args.slice(2);\n        break\n    }\n    if (inserted) { ob.observeArray(inserted); }\n    // notify change\n    ob.dep.notify();\n    return result\n  });\n});\n\n/*  */\n\nvar arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n\n/**\n * By default, when a reactive property is set, the new value is\n * also converted to become reactive. However when passing down props,\n * we don't want to force conversion because the value may be a nested value\n * under a frozen data structure. Converting it would defeat the optimization.\n */\nvar observerState = {\n  shouldConvert: true,\n  isSettingProps: false\n};\n\n/**\n * Observer class that are attached to each observed\n * object. Once attached, the observer converts target\n * object's property keys into getter/setters that\n * collect dependencies and dispatches updates.\n */\nvar Observer = function Observer (value) {\n  this.value = value;\n  this.dep = new Dep();\n  this.vmCount = 0;\n  def(value, '__ob__', this);\n  if (Array.isArray(value)) {\n    var augment = hasProto\n      ? protoAugment\n      : copyAugment;\n    augment(value, arrayMethods, arrayKeys);\n    this.observeArray(value);\n  } else {\n    this.walk(value);\n  }\n};\n\n/**\n * Walk through each property and convert them into\n * getter/setters. This method should only be called when\n * value type is Object.\n */\nObserver.prototype.walk = function walk (obj) {\n  var keys = Object.keys(obj);\n  for (var i = 0; i < keys.length; i++) {\n    defineReactive(obj, keys[i], obj[keys[i]]);\n  }\n};\n\n/**\n * Observe a list of Array items.\n */\nObserver.prototype.observeArray = function observeArray (items) {\n  for (var i = 0, l = items.length; i < l; i++) {\n    observe(items[i]);\n  }\n};\n\n// helpers\n\n/**\n * Augment an target Object or Array by intercepting\n * the prototype chain using __proto__\n */\nfunction protoAugment (target, src) {\n  /* eslint-disable no-proto */\n  target.__proto__ = src;\n  /* eslint-enable no-proto */\n}\n\n/**\n * Augment an target Object or Array by defining\n * hidden properties.\n *\n * istanbul ignore next\n */\nfunction copyAugment (target, src, keys) {\n  for (var i = 0, l = keys.length; i < l; i++) {\n    var key = keys[i];\n    def(target, key, src[key]);\n  }\n}\n\n/**\n * Attempt to create an observer instance for a value,\n * returns the new observer if successfully observed,\n * or the existing observer if the value already has one.\n */\nfunction observe (value) {\n  if (!isObject(value)) {\n    return\n  }\n  var ob;\n  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n    //不用再生成新的实例了\n    ob = value.__ob__;\n  } else if (\n    observerState.shouldConvert &&\n    (Array.isArray(value) || isPlainObject(value)) &&\n    Object.isExtensible(value) &&\n    !value._isVue\n  ) {\n    ob = new Observer(value);\n  }\n  return ob\n}\n\n/**\n * Define a reactive property on an Object.\n */\nfunction defineReactive (\n  obj,\n  key,\n  val,\n  customSetter\n) {\n  var dep = new Dep();\n\n  var property = Object.getOwnPropertyDescriptor(obj, key);\n  if (property && property.configurable === false) {\n    return\n  }\n\n  // cater for pre-defined getter/setters\n  var getter = property && property.get;\n  var setter = property && property.set;\n\n  var childOb = observe(val);\n  Object.defineProperty(obj, key, {\n    enumerable: true,\n    configurable: true,\n    get: function reactiveGetter () {\n      var value = getter ? getter.call(obj) : val;\n      if (Dep.target) {\n        dep.depend();\n        if (childOb) {\n          childOb.dep.depend();\n        }\n        if (Array.isArray(value)) {\n          dependArray(value);\n        }\n      }\n      return value\n    },\n    set: function reactiveSetter (newVal) {\n      var value = getter ? getter.call(obj) : val;\n      if (newVal === value) {\n        return\n      }\n      if (customSetter) {\n        customSetter();\n      }\n      if (setter) {\n        setter.call(obj, newVal);\n      } else {\n        val = newVal;\n      }\n      childOb = observe(newVal);\n      dep.notify();\n    }\n  });\n}\n\n/**\n * Set a property on an object. Adds the new property and\n * triggers change notification if the property doesn't\n * already exist.\n */\n\n\n/**\n * Delete a property and trigger change if necessary.\n */\n\n\n/**\n * Collect dependencies on array elements when the array is touched, since\n * we cannot intercept array element access like property getters.\n */\nfunction dependArray (value) {\n  for (var e = (void 0), i = 0, l = value.length; i < l; i++) {\n    e = value[i];\n    e && e.__ob__ && e.__ob__.dep.depend();\n    if (Array.isArray(e)) {\n      dependArray(e);\n    }\n  }\n}\n\n/*  */\n\n// import { queueWatcher } from './scheduler'\nvar uid$1 = 0;\n\n/**\n * A watcher parses an expression, collects dependencies,\n * and fires callback when the expression value changes.\n * This is used for both the $watch() api and directives.\n */\nvar Watcher = function Watcher (\n  vm,\n  expOrFn,\n  cb,\n  options\n) {\n  if ( options === void 0 ) options = {};\n\n  this.vm = vm;\n  vm._watchers.push(this);\n  // options\n  this.deep = !!options.deep;\n  this.user = !!options.user;\n  this.lazy = !!options.lazy;\n  this.sync = !!options.sync;\n  this.expression = expOrFn.toString();\n  this.cb = cb;\n  this.id = ++uid$1; // uid for batching\n  this.active = true;\n  this.dirty = this.lazy; // for lazy watchers\n  this.deps = [];\n  this.newDeps = [];\n  this.depIds = new _Set();\n  this.newDepIds = new _Set();\n  // parse expression for getter\n  if (typeof expOrFn === 'function') {\n    this.getter = expOrFn;\n  } else {\n    this.getter = parsePath(expOrFn);\n    if (!this.getter) {\n      this.getter = function () {};\n      process.env.NODE_ENV !== 'production' && warn(\n        \"Failed watching path: \\\"\" + expOrFn + \"\\\" \" +\n        'Watcher only accepts simple dot-delimited paths. ' +\n        'For full control, use a function instead.',\n        vm\n      );\n    }\n  }\n  this.value = this.lazy\n    ? undefined\n    : this.get();\n};\n\n/**\n * Evaluate the getter, and re-collect dependencies.\n */\nWatcher.prototype.get = function get () {\n  pushTarget(this);\n  var value = this.getter.call(this.vm, this.vm);\n  // \"touch\" every property so they are all tracked as\n  // dependencies for deep watching\n  if (this.deep) {\n    traverse(value);\n  }\n  popTarget();\n  this.cleanupDeps();\n  return value\n};\n\n/**\n * Add a dependency to this directive.\n */\nWatcher.prototype.addDep = function addDep (dep) {\n  var id = dep.id;\n  if (!this.newDepIds.has(id)) {\n    this.newDepIds.add(id);\n    this.newDeps.push(dep);\n    if (!this.depIds.has(id)) {\n      dep.addSub(this);\n    }\n  }\n};\n\n/**\n * Clean up for dependency collection.\n */\nWatcher.prototype.cleanupDeps = function cleanupDeps () {\n    var this$1 = this;\n\n  var i = this.deps.length;\n  while (i--) {\n    var dep = this$1.deps[i];\n    if (!this$1.newDepIds.has(dep.id)) {\n      dep.removeSub(this$1);\n    }\n  }\n  var tmp = this.depIds;\n  this.depIds = this.newDepIds;\n  this.newDepIds = tmp;\n  this.newDepIds.clear();\n  tmp = this.deps;\n  this.deps = this.newDeps;\n  this.newDeps = tmp;\n  this.newDeps.length = 0;\n};\n\n/**\n * Subscriber interface.\n * Will be called when a dependency changes.\n */\nWatcher.prototype.update = function update () {\n  /* istanbul ignore else */\n  if (this.lazy) {\n    this.dirty = true;\n  } else if (this.sync) {\n    this.run();\n  } else {\n    // console.log(\"queuewatcher\")\n    console.log('queuewatcher : watch run');\n    this.run();\n    // queueWatcher(this)\n    }\n  };\n\n  /**\n   * Scheduler job interface.\n * Will be called by the scheduler.\n */\nWatcher.prototype.run = function run () {\n  if (this.active) {\n    var value = this.get();\n    if (\n      value !== this.value ||\n      // Deep watchers and watchers on Object/Arrays should fire even\n      // when the value is the same, because the value may\n      // have mutated.\n      isObject(value) ||\n      this.deep\n    ) {\n      // set new value\n      var oldValue = this.value;\n      this.value = value;\n      if (this.user) {\n        try {\n          this.cb.call(this.vm, value, oldValue);\n        } catch (e) {\n          process.env.NODE_ENV !== 'production' && warn(\n            (\"Error in watcher \\\"\" + (this.expression) + \"\\\"\"),\n            this.vm\n          );\n          throw e\n        }\n      } else {\n        this.cb.call(this.vm, value, oldValue);\n      }\n    }\n  }\n};\n\n/**\n * Evaluate the value of the watcher.\n * This only gets called for lazy watchers.\n */\nWatcher.prototype.evaluate = function evaluate () {\n  this.value = this.get();\n  this.dirty = false;\n};\n\n/**\n * Depend on all deps collected by this watcher.\n */\nWatcher.prototype.depend = function depend () {\n    var this$1 = this;\n\n  var i = this.deps.length;\n  while (i--) {\n    this$1.deps[i].depend();\n  }\n};\n\n/**\n * Remove self from all dependencies' subscriber list.\n */\nWatcher.prototype.teardown = function teardown () {\n    var this$1 = this;\n\n  if (this.active) {\n    // remove self from vm's watcher list\n    // this is a somewhat expensive operation so we skip it\n    // if the vm is being destroyed or is performing a v-for\n    // re-render (the watcher list is then filtered by v-for).\n    if (!this.vm._isBeingDestroyed && !this.vm._vForRemoving) {\n      remove(this.vm._watchers, this);\n    }\n    var i = this.deps.length;\n    while (i--) {\n      this$1.deps[i].removeSub(this$1);\n    }\n    this.active = false;\n  }\n};\n\n/**\n * Recursively traverse an object to evoke all converted\n * getters, so that every nested property inside the object\n * is collected as a \"deep\" dependency.\n */\nvar seenObjects = new _Set();\nfunction traverse (val, seen) {\n  var i, keys;\n  if (!seen) {\n    seen = seenObjects;\n    seen.clear();\n  }\n  var isA = Array.isArray(val);\n  var isO = isObject(val);\n  if ((isA || isO) && Object.isExtensible(val)) {\n    if (val.__ob__) {\n      var depId = val.__ob__.dep.id;\n      if (seen.has(depId)) {\n        return\n      } else {\n        seen.add(depId);\n      }\n    }\n    if (isA) {\n      i = val.length;\n      while (i--) { traverse(val[i], seen); }\n    } else if (isO) {\n      keys = Object.keys(val);\n      i = keys.length;\n      while (i--) { traverse(val[keys[i]], seen); }\n    }\n  }\n}\n\n/**\n * 一个对象 var ob = observer(obj)(如果是一个多层嵌套对象,则无限递归下去)\n * 给obj设置get set (如果该对象本来就有get\\set 则再包一层)\n * 对象一旦被set, 就调用ob.deps.notice  (deps 里维护了一个watcher队列，可以通过ob.deps.addSub添加watch)\n */\n/**\n * 管理消息队列\n * 拥有挂载类Dep上的全局唯一对象target\n */\n/**\n * 消息载体\n */\nwindow.vm = {\n    \"key\": \"value\",\n    \"_watchers\": [],\n    \"_render\": function () {\n        console.log('_render : call vm data : ' + this.key);\n    },\n    \"_update\": function () {\n        console.log('_update');\n    }\n};\n\nobserve(vm);\n\n/**\n * Watch 内部的函数: 必须要有个对vm的get操作\n * 当生成watcher实例时:\n *  1、把当前watcher作为全局唯一的target, 挂载到Dep类上 (Dep.pushTarget(this))\n *  2、执行handler\n *      hander 必须执行下对vm对象的get操作\n *      因为在get的时候, 如果 Dep.target 存在, 才会把当前watcher实例dep实例的队列里(dep.addSub(this))\n *  3、执行Dep.popTarget, 把Dep类上的唯一target移除\n *  4、当有对vm的set操作的时候, 直接执行dep实例上的watcher队列(dep.notify())\n *\n *\n *  注意: Dep 是消息队列的类, dep是消息队列的实例对象\n */\nnew Watcher(vm, function () {\n    vm._update(vm._render());\n}, function () {});\n\nnew Watcher(vm, function () {\n    console.log('call vm get method : ' + vm.key);\n    console.log('second watcher instance');\n}, function () {});\n\n})));\n"]}